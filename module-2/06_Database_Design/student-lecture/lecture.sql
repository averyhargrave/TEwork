---------------------------------------------------------------------------------------------------------------
--
-- DROP - remove a table and all it's data from the database
--
-- Consider referential constraints - cannot drop a parent if it has dependents
--
--      DROP TABLE table-name             - Will fail if table does not exist or if it has dependents
--
--      DROP TABLE IF EXISTS table-name   - Will run whether table exists or not; will fail if table has dependents
--
--      DROP TABLE IF EXISTS table-name  CASCADE   - Will run whether table exists or not and whether has dependents or not
--
--
--  CREATE - define a table to the database manager
--
--       CREATE TABLE table-name
--       (column-name     dat√üa-type    NOT NULL,
--        column-name     data-type,
--        column-name     data-type    DEFAULT   default-value,
--        column-name     data-type    UNIQUE,
--        CONSTRAINT constraint-name PRIMARY KEY (column(s)-in-table),
--        CONSTRAINT constraint-name FOREIGN KEY(for-key-column(s)) REFERENCES parent-table(pri-key-column(s)),
--        CONSTRAINT consraint-name  CHECK (where-predicate)
--       )
--
--       Note: CONTRAINT is part of the set of column definitions (i.e. inside the parens for column specification)
--
-- 
-- ALTER - changing the definition of a table
--
-- Commonly used to add/remove constraints on tables or change existing table attributes
--
--
-- Add a FOREIGN KEY - Establish Parent/Dependant relationship
--
-- FOREIGN KEY must have the same-number, same-order, compatible-data-type as entire PRIMARY KEY of parent
--             and must have a matching value in the PRIMARY KEY in the parent table
--
-- When adding FOREIGN KEY after data has been loaded into table, all FOREIGN KEY values must have a match in parent
--
--      ALTER TABLE dependent-table-name ADD FOREIGN KEY(for-key-column(s)) REFERENCES parent-table(pri-key-column(s)) 
--
-- Remove a constraint from a table
--
--      ALTER TABLE table-name DROP CONSTRAINT constraint_name
--
--
-- Add a column to an existing table
--
-- Cannot add a NOT NULL column to a table with existing data
--
--      ALTER TABLE table-name ADD COLUMN new_column_name data_type constraint
--
--
-- Rename an existing column in a table
--
--      ALTER TABLE table-name RENAME column-name TO new-column-name;
--
--
-- Rename a table
--
--      ALTER TABLE table-name RENAME TO new-table-name  - Will fail if table does not exist
--
--      ALTER TABLE IF EXISTS table-name RENAME TO new-table-name  - Successful if table exists or not
--
---------------------------------------------------------------------------------------------------------------

-- Drop any tables we are creating in this SQL file

-- if a table has dependents, it cannot be dropped unless 7ou add the cascade option to the drop of the parent

drop table if exists artist   cascade; -- remove the artist table from the database
drop table if exists painting cascade;
drop table if exists customer cascade;
drop table if exists purchase cascade; -- cascade says to remove any dependent tables as well

create table artist
(
 artist_id   serial         NOT NULL, -- serial indicates an integer value generated by the DBM
-- the number in () for character varying is the maximum size you expect, helps postgres allocate memory for the variable
-- if you don't code the maximum size expected for character varying, it assumes the max size is 32,767
 artist_name character varying(50)  NOT NULL,
--          constraint name, type of constraint(columns)
 constraint pk_artist_artist_id PRIMARY KEY(artist_id)
)
;

create table painting
(
 painting_id     serial, -- serial implies not null
 artist_id       int    NOT NULL, -- int is used because artist_id in artist is a serial
 painting_title  character varying(100),
 constraint pk_painting_painting_id PRIMARY KEY(painting_id)
)
;

create table customer
(
 customer_id      serial,
 customer_name    character varying(40),
 customer_address character varying(100),
 customer_city    character varying(25),
 customer_state   character varying(2),  -- 2 char State Code
 customer_zipcode character varying(10),
 customer_phone   character varying(12), -- 216-555-1234
 constraint customer_constraint PRIMARY KEY(customer_id)
)
;

create table purchase
(
 purchase_id    serial,
 customer_id    int   NOT NULL,
 painting_id    int   NOT NULL,
 purchase_date  date  NOT NULL,
 purchase_price numeric(10,0), -- max value is 10 digits with no decimal places
-- numeric(12,2) would be a max value of 12 digits including 2 decimals (9999999999.99)
 constraint pk_purchase_purchase_id PRIMARY KEY(purchase_id)
)
;

-- When adding a Foreign Key constraint to a table, the parent table must already exist

-- To avoid worrying about the order in which you create tables
--     add the Foreign Key constraint after all the tables have been created (and loaded with data if you are adding data)
-- Use the ALTER statement to change the structure of a table after it has already been created to avoid having to drop and recreate it
-- Dropping a table deletes *all* of the data currently in the table, ALTER does not

alter table painting
add FOREIGN KEY(artist_id)
REFERENCES artist(artist_id)
;

alter table purchase
add FOREIGN KEY(customer_id)
REFERENCES customer(customer_id)
;

alter table purchase
add FOREIGN KEY(painting_id)
REFERENCES painting(painting_id)
;